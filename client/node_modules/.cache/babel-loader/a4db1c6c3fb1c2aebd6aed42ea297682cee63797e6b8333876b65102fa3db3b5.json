{"ast":null,"code":"/*==================================================\n/src/store/reducers/campus.js\n\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \nDepending on the Action object, the Reducer updates the State and return the new State object.\nIt also defines the State and its default initial value.\n================================================== */\nimport { FETCH_CAMPUS } from \"../actions/actionTypes\"; // Import Action Type\n\n// Define default Initial State\nconst initialState = {\n  students: [],\n  name: \"\",\n  address: \"\",\n  description: \"\"\n};\n\n// Reducer to manage campus data\nconst campus = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CAMPUS:\n      return {\n        ...state,\n        ...action.payload // Replace state with fetched campus data\n      };\n    case DELETE_STUDENT:\n      return {\n        ...state,\n        students: state.students.filter(student => student.id !== action.payload.studentId)\n      };\n    default:\n      return state;\n  }\n};\nexport default campus;","map":{"version":3,"names":["FETCH_CAMPUS","initialState","students","name","address","description","campus","state","action","type","payload","DELETE_STUDENT","filter","student","id","studentId"],"sources":["/Users/Annichka/WD-Final/client/src/store/reducers/campus.js"],"sourcesContent":["/*==================================================\n/src/store/reducers/campus.js\n\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \nDepending on the Action object, the Reducer updates the State and return the new State object.\nIt also defines the State and its default initial value.\n================================================== */\nimport { FETCH_CAMPUS } from \"../actions/actionTypes\";  // Import Action Type\n\n// Define default Initial State\nconst initialState = {\n  students: [],\n  name: \"\",\n  address: \"\",\n  description: \"\",\n};\n\n// Reducer to manage campus data\nconst campus = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CAMPUS:\n      return {\n        ...state,\n        ...action.payload,  // Replace state with fetched campus data\n      };\n    case DELETE_STUDENT:\n      return {\n        ...state,\n        students: state.students.filter(student => student.id !== action.payload.studentId),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default campus;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,wBAAwB,CAAC,CAAE;;AAExD;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,MAAM,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE,OAAO,CAAG;MACtB,CAAC;IACH,KAAKC,cAAc;MACjB,OAAO;QACL,GAAGJ,KAAK;QACRL,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACU,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACK,SAAS;MACpF,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}