{"ast":null,"code":"var _jsxFileName = \"/Users/Annichka/WD-Final/client/src/components/containers/AllStudentsContainer.js\";\n/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, \nand passes data (if any) as props to the corresponding View component. \nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport Header from './Header';\nimport { fetchAllStudentsThunk, deleteStudentThunk } from '../../store/thunks';\nimport AllStudentsView from '../views/AllStudentsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AllStudentsContainer extends Component {\n  // Lifecycle method: Fetch all students data when the component mounts\n  componentDidMount() {\n    this.props.fetchAllStudents(); // Fetch students from the backend when the component is mounted\n  }\n\n  // Render the All Students view, passing students data as props to the view component\n  render() {\n    const {\n      allStudents,\n      deleteStudent\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllStudentsView, {\n        students: allStudents // Pass all students to the view\n        ,\n        deleteStudent: deleteStudent // Pass deleteStudent method to handle student removal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// The following \"mapState\" function specifies the data from Redux Store that the component needs\n// It gets the \"allStudents\" from the Redux store and returns it as props\nconst mapState = state => ({\n  allStudents: state.allStudents // Retrieve all students from the Redux store\n});\n\n// The following \"mapDispatch\" function is used to dispatch actions to the Redux store\n// It will dispatch the fetchAllStudentsThunk to fetch students data and deleteStudentThunk to delete a student\nconst mapDispatch = dispatch => ({\n  fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n  // Fetch all students from the backend\n  deleteStudent: studentId => dispatch(deleteStudentThunk(studentId)) // Delete a specific student by ID\n});\n\n// Export the store-connected container component\n// withRouter is used to allow this component to have access to the router's props (history, location, etc.)\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));","map":{"version":3,"names":["React","Component","connect","withRouter","Header","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","jsxDEV","_jsxDEV","AllStudentsContainer","componentDidMount","props","fetchAllStudents","render","allStudents","deleteStudent","children","fileName","_jsxFileName","lineNumber","columnNumber","students","mapState","state","mapDispatch","dispatch","studentId"],"sources":["/Users/Annichka/WD-Final/client/src/components/containers/AllStudentsContainer.js"],"sourcesContent":["/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, \nand passes data (if any) as props to the corresponding View component. \nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport Header from './Header';\nimport { \n  fetchAllStudentsThunk,\n  deleteStudentThunk\n} from '../../store/thunks';\nimport AllStudentsView from '../views/AllStudentsView';\n\nclass AllStudentsContainer extends Component {\n  // Lifecycle method: Fetch all students data when the component mounts\n  componentDidMount() {\n    this.props.fetchAllStudents(); // Fetch students from the backend when the component is mounted\n  }\n\n  // Render the All Students view, passing students data as props to the view component\n  render() {\n    const { allStudents, deleteStudent } = this.props;\n\n    return (\n      <div>\n        <Header />\n        <AllStudentsView \n          students={allStudents} // Pass all students to the view\n          deleteStudent={deleteStudent} // Pass deleteStudent method to handle student removal\n        />\n      </div>\n    );\n  }\n}\n\n// The following \"mapState\" function specifies the data from Redux Store that the component needs\n// It gets the \"allStudents\" from the Redux store and returns it as props\nconst mapState = (state) => ({\n  allStudents: state.allStudents, // Retrieve all students from the Redux store\n});\n\n// The following \"mapDispatch\" function is used to dispatch actions to the Redux store\n// It will dispatch the fetchAllStudentsThunk to fetch students data and deleteStudentThunk to delete a student\nconst mapDispatch = (dispatch) => ({\n  fetchAllStudents: () => dispatch(fetchAllStudentsThunk()), // Fetch all students from the backend\n  deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)), // Delete a specific student by ID\n});\n\n// Export the store-connected container component\n// withRouter is used to allow this component to have access to the router's props (history, location, etc.)\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SACEC,qBAAqB,EACrBC,kBAAkB,QACb,oBAAoB;AAC3B,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,oBAAoB,SAAST,SAAS,CAAC;EAC3C;EACAU,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACjC;;EAEA;EACAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,WAAW;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACJ,KAAK;IAEjD,oBACEH,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACL,MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVZ,OAAA,CAACF,eAAe;QACde,QAAQ,EAAEP,WAAY,CAAC;QAAA;QACvBC,aAAa,EAAEA,aAAc,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAEA;AACA;AACA,MAAME,QAAQ,GAAIC,KAAK,KAAM;EAC3BT,WAAW,EAAES,KAAK,CAACT,WAAW,CAAE;AAClC,CAAC,CAAC;;AAEF;AACA;AACA,MAAMU,WAAW,GAAIC,QAAQ,KAAM;EACjCb,gBAAgB,EAAEA,CAAA,KAAMa,QAAQ,CAACrB,qBAAqB,CAAC,CAAC,CAAC;EAAE;EAC3DW,aAAa,EAAGW,SAAS,IAAKD,QAAQ,CAACpB,kBAAkB,CAACqB,SAAS,CAAC,CAAC,CAAE;AACzE,CAAC,CAAC;;AAEF;AACA;AACA,eAAexB,UAAU,CAACD,OAAO,CAACqB,QAAQ,EAAEE,WAAW,CAAC,CAACf,oBAAoB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}