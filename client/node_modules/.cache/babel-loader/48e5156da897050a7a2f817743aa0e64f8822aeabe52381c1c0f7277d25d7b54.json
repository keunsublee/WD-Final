{"ast":null,"code":"var _jsxFileName = \"/Users/Annichka/WD-Final/client/src/components/containers/AllCampusesContainer.js\";\n/*==================================================\n/src/components/containers/AllCampusesContainer.js\n\n//The Container component is responsible for stateful logic and data fetching, \n//and passes data (if any) as props to the corresponding View component. \n//If needed, it also defines the component's \"connect\" function.\n//================================================== */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\"; // Assuming deleteCampusThunk exists\nimport { AllCampusesView } from \"../views\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AllCampusesContainer extends Component {\n  // Lifecycle method: Fetch all campuses data when the component mounts\n  componentDidMount() {\n    this.props.fetchAllCampuses(); // Fetch campuses data from the backend\n  }\n\n  // Render the All Campuses view, passing campuses data as props to the corresponding View component\n  render() {\n    const {\n      allCampuses,\n      deleteCampus\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), allCampuses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No campuses available. Please add a new campus.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.history.push(\"/add-campus\"),\n          children: \"Add New Campus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AllCampusesView, {\n        allCampuses: allCampuses // Passing the fetched campuses data to the AllCampusesView\n        ,\n        deleteCampus: deleteCampus // Function for deleting a campus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Map Redux store state to props\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses // Accessing allCampuses from Redux state\n  };\n};\n\n// Map dispatch actions to props\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    // Dispatch thunk action to fetch campuses\n    deleteCampus: campusId => dispatch(deleteCampusThunk(campusId)) // Dispatch action to delete a campus\n  };\n};\n\n// Prop type checking\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  // Expecting allCampuses to be an array\n  fetchAllCampuses: PropTypes.func.isRequired,\n  // fetchAllCampuses should be a function\n  deleteCampus: PropTypes.func.isRequired,\n  // deleteCampus should be a function\n  history: PropTypes.object.isRequired // Required to navigate to Add Campus page\n};\n\n// Export the connected container component\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchAllCampusesThunk","deleteCampusThunk","AllCampusesView","Header","jsxDEV","_jsxDEV","AllCampusesContainer","componentDidMount","props","fetchAllCampuses","render","allCampuses","deleteCampus","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","history","push","mapState","state","mapDispatch","dispatch","campusId","propTypes","array","isRequired","func","object"],"sources":["/Users/Annichka/WD-Final/client/src/components/containers/AllCampusesContainer.js"],"sourcesContent":["/*==================================================\n/src/components/containers/AllCampusesContainer.js\n\n//The Container component is responsible for stateful logic and data fetching, \n//and passes data (if any) as props to the corresponding View component. \n//If needed, it also defines the component's \"connect\" function.\n//================================================== */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\"; // Assuming deleteCampusThunk exists\nimport { AllCampusesView } from \"../views\";\nimport Header from \"./Header\";\n\nclass AllCampusesContainer extends Component {\n  // Lifecycle method: Fetch all campuses data when the component mounts\n  componentDidMount() {\n    this.props.fetchAllCampuses(); // Fetch campuses data from the backend\n  }\n\n  // Render the All Campuses view, passing campuses data as props to the corresponding View component\n  render() {\n    const { allCampuses, deleteCampus } = this.props;\n\n    return (\n      <div>\n        <Header />\n        {/* Show a message if no campuses exist */}\n        {allCampuses.length === 0 ? (\n          <div>\n            <p>No campuses available. Please add a new campus.</p>\n            {/* Optionally add a button or link to trigger campus creation */}\n            <button onClick={() => this.props.history.push(\"/add-campus\")}>\n              Add New Campus\n            </button>\n          </div>\n        ) : (\n          <AllCampusesView\n            allCampuses={allCampuses} // Passing the fetched campuses data to the AllCampusesView\n            deleteCampus={deleteCampus} // Function for deleting a campus\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n// Map Redux store state to props\nconst mapState = (state) => {\n  return {\n    allCampuses: state.allCampuses,  // Accessing allCampuses from Redux state\n  };\n};\n\n// Map dispatch actions to props\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()), // Dispatch thunk action to fetch campuses\n    deleteCampus: (campusId) => dispatch(deleteCampusThunk(campusId)), // Dispatch action to delete a campus\n  };\n};\n\n// Prop type checking\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired, // Expecting allCampuses to be an array\n  fetchAllCampuses: PropTypes.func.isRequired, // fetchAllCampuses should be a function\n  deleteCampus: PropTypes.func.isRequired,  // deleteCampus should be a function\n  history: PropTypes.object.isRequired, // Required to navigate to Add Campus page\n};\n\n// Export the connected container component\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,qBAAqB,EAAEC,iBAAiB,QAAQ,oBAAoB,CAAC,CAAC;AAC/E,SAASC,eAAe,QAAQ,UAAU;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,oBAAoB,SAAST,SAAS,CAAC;EAC3C;EACAU,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACjC;;EAEA;EACAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,WAAW;MAAEC;IAAa,CAAC,GAAG,IAAI,CAACJ,KAAK;IAEhD,oBACEH,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACF,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAETN,WAAW,CAACO,MAAM,KAAK,CAAC,gBACvBb,OAAA;QAAAQ,QAAA,gBACER,OAAA;UAAAQ,QAAA,EAAG;QAA+C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEtDZ,OAAA;UAAQc,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACX,KAAK,CAACY,OAAO,CAACC,IAAI,CAAC,aAAa,CAAE;UAAAR,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENZ,OAAA,CAACH,eAAe;QACdS,WAAW,EAAEA,WAAY,CAAC;QAAA;QAC1BC,YAAY,EAAEA,YAAa,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;;AAEA;AACA,MAAMK,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLZ,WAAW,EAAEY,KAAK,CAACZ,WAAW,CAAG;EACnC,CAAC;AACH,CAAC;;AAED;AACA,MAAMa,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLhB,gBAAgB,EAAEA,CAAA,KAAMgB,QAAQ,CAACzB,qBAAqB,CAAC,CAAC,CAAC;IAAE;IAC3DY,YAAY,EAAGc,QAAQ,IAAKD,QAAQ,CAACxB,iBAAiB,CAACyB,QAAQ,CAAC,CAAC,CAAE;EACrE,CAAC;AACH,CAAC;;AAED;AACApB,oBAAoB,CAACqB,SAAS,GAAG;EAC/BhB,WAAW,EAAEb,SAAS,CAAC8B,KAAK,CAACC,UAAU;EAAE;EACzCpB,gBAAgB,EAAEX,SAAS,CAACgC,IAAI,CAACD,UAAU;EAAE;EAC7CjB,YAAY,EAAEd,SAAS,CAACgC,IAAI,CAACD,UAAU;EAAG;EAC1CT,OAAO,EAAEtB,SAAS,CAACiC,MAAM,CAACF,UAAU,CAAE;AACxC,CAAC;;AAED;AACA,eAAe9B,OAAO,CAACuB,QAAQ,EAAEE,WAAW,CAAC,CAAClB,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}